<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.recorded.infra.product.ProductDao">

	<resultMap id="resultMapObj" type="com.recorded.infra.product.ProductDto"></resultMap>
	
<select id="selectList" resultMap="resultMapObj" parameterType="map">
    SELECT 
        a.productSeq,
        a.delNY,
        a.ProductName,
        a.OrgPrice,
        a.DiscountedPrice,
        a.prodStockCD,
        a.categoryCD,
        a.regDateTime,
        a.modDateTime,
         (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount,
		 (SELECT ROUND(AVG(reviewRate) * 2) / 2 FROM review WHERE Product_seq = a.productSeq) AS reviewRateAvg
    FROM 
        product a
    <where>
        <if test="shValue != null and !shValue.isEmpty()">
            AND a.ProductName LIKE CONCAT('%', #{shValue}, '%')
        </if>
    </where>
    <choose>
        <when test="pageNumToShow != null and pageSize != null">
            LIMIT #{startRow}, #{pageSize}
        </when>
    </choose>
</select>

	      <select id="selectOne" resultMap="resultMapObj">
    
    		select
    		
	        a.productSeq,
	        a.delNY,
	        a.ProductName,
	        a.OrgPrice,
	        a.DiscountedPrice,
	        a.prodStockCD,
	        a.categoryCD,
	        a.regDateTime,
	        a.modDateTime,
	        a.DetailDescription,
	        a.fabric,
	        a.detailSize
    		
    		from product  a
    		
    		where 1=1
    			and a.productSeq=#{productSeq} 
    			
    </select>
    
   	<select id="selectProd" resultMap="resultMapObj">
    
    		select
    		
	        a.productSeq,
	        a.delNY,
	        a.ProductName,
	        a.OrgPrice,
	        a.DiscountedPrice,
	        a.prodStockCD,
	        a.categoryCD,
	        a.regDateTime,
	        a.modDateTime,
	        a.DetailDescription,
	        a.fabric,
	        a.detailSize,
	        (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount,
			(SELECT ROUND(AVG(reviewRate) * 2) / 2 FROM review WHERE Product_seq = a.productSeq) AS reviewRateAvg


	       
    		from product  a
    		
    			where a.productSeq = #{productSeq}
    			
    </select>
    
    
    <select id="selectWishlist" resultMap="resultMapObj">
	select
	    a.wishlistSeq,
	    a.Member_memberSeq,
	    a.Product_productSeq,
	    a.size as wishlistSize,
	    a.color as wishlistColor,
	    a.delNY,
	    a.ea,
	    a.color,
	    a.size,
	    b.memberSeq,
	    c.productSeq,
	    c.ProductName,
	    c.OrgPrice,
	    c.DiscountedPrice
	from wishlist a
	inner join member b on a.Member_memberSeq=b.memberSeq
	inner join product c on a.Product_productSeq=c.productSeq
    where a.wishlistSeq = #{wishlistSeq}
    </select>
 
    	
    <select id="prodReview" resultMap="resultMapObj">
    select
    a.productSeq,
    b.ReviewContent,
    b.regDateTime as revRegDateTime,
    b.reviewRate,
    b.Member_seq,
    b.Product_seq,
    c.memberSeq,
    c.name as revName     
from product a
left join review b on b.Product_seq=a.productSeq
left join member c on b.Member_seq=c.memberSeq
where a.productSeq = #{productSeq}

    </select>
    
    <!-- 제품 상세 페이지에서 호출할 색상 테이블 -->
    <select id="prodColor" resultMap="resultMapObj">
    SELECT 
        a.productSeq,
        b.colorSeq,
        b.color,
        b.memo
    FROM 
        product a
    INNER JOIN
        color b ON a.productSeq = b.productSeq
    WHERE 1=1
     AND 
        a.productSeq = #{productSeq}

</select>

<!-- 제품 상세 페이지에서 호출할 사이즈 테이블 -->
<select id="prodSize" resultMap="resultMapObj" >
    SELECT 
        a.productSeq,
       	b.sizeSeq,
       	b.size
    FROM 
        product a
   INNER JOIN
   		size b
   ON
   		a.productSeq=b.productSeq
   
   where 1=1
   AND
    		a.productSeq=#{productSeq} 
</select>
    
	  <insert id="insert">
			insert into product (
				delNY
				, ProductName
				, OrgPrice
				, DiscountedPrice
				, prodStockCD
				, categoryCD
				, detailDescription
				, regDateTime
				, modDateTime

			) values (
			#{delNY}
			, #{ProductName}
			,#{OrgPrice}
			,#{DiscountedPrice}
			,#{prodStockCD}
			,#{categoryCD}
			,#{DetailDescription}
			,now()
			,now()
			)
			<selectKey resultType="String" keyProperty="productSeq" order="AFTER">
				select LAST_INSERT_ID()
			</selectKey>
	  </insert>
	  
<insert id="insertRev">
    insert into review (
        delNY,
        ReviewContent,
        regDateTime,
        modDateTime,
        Member_seq,
        Product_seq,
        reviewRate
    ) values (
        #{delNY},
        #{ReviewContent},
        now(),
        now(),
        #{Member_seq},
        #{Product_seq},
        #{reviewRate}
    )
</insert>

<insert id="insertWishlist">
    insert into wishlist (
        Member_memberSeq,
        Product_productSeq,
        delNY,
        regDateTime,
        modDateTime,
        ea,
        size,
       	color
    ) values (
        #{member_memberSeq},
        #{product_productSeq},
        #{delNY},
        now(),
        now(),
        #{ea},
        #{size},
        #{color}
    )
</insert>

    <update id="update">
   	update product
   	set
   		ProductName = #{ProductName}
   	WHERE 1=1
   		and productSeq = #{productSeq}
  	
  	</update>
  	
  	<update id="uelete">
  			update product
  			set
  			delNY=1
  			where 1=1
  			and productSeq = #{productSeq}
  	</update>
  	
  	<delete id="delete">
  	
  	delete from product
  	where productSeq=#{productSeq}
  	</delete>
	  
	  <!-- 페이징 -->
	    <!-- Total count -->
		 <select id="getTotalProductCount" resultType="int">
	    SELECT COUNT(*) FROM product a 
	    
	    <if test="shDelNy != null and shDelNy != ''">
	        WHERE a.delNY = #{shDelNy}
	    </if>
	    
	    <choose>
	    
	        <when test="shOption == 1">
	            AND a.productSeq = #{shValue}
	        </when>
	        
	        <when test="shOption == 2">
	            AND a.ProductName LIKE CONCAT('%',#{shValue},'%')
	        </when>
	        
	    </choose>
	</select>
	
	<!-- 페이징을 위해 DB 단에서 뿌리는 데이터 셀렉 -->
<!-- 	<select id="selectPagedProductList" resultMap="resultMapObj"> -->
	
	<!--     SELECT
				a.productSeq
				, a.delNY
				, a.ProductName
				, a.OrgPrice
				, a.DiscountedPrice
				, a.ProductDescription
				, a.prodStockCD
				, a.category1CD
				, a.category2CD
				, a.regDateTime
				, a.modDateTime
                , b.color
                , c.size
			
			from 
			    product a
			inner join 
				prodColor b
			on
				 a.productSeq=b.Product_productSeq
			inner join 
				prodSize c
			on 
				b.Product_productSeq=c.Product_productSeq
			
	    
	    <if test="shDelNy != null and shDelNy != ''">
	        AND a.delNY = #{shDelNy}
	    </if>
	    
	    <choose>
	    
	        <when test="shOption == 1">
	            AND a.productSeq = #{shValue}
	        </when>
	        
	        <when test="shOption == 2">
	            AND a.ProductName LIKE CONCAT('%',#{shValue},'%')
	        </when>
	        
	    </choose> -->
		<select id="selectPagedProductList" resultMap="resultMapObj">
		    select
		        a.productSeq
		        , a.delNY
		        , a.ProductName
		        , a.OrgPrice
		        , a.DiscountedPrice
		        , a.prodStockCD
		        , a.categoryCD
		        , a.regDateTime
		        , a.modDateTime
		    from 
		        product a
		    <where>
		        <if test="shValue != null and !shValue.isEmpty()">
		            and a.ProductName LIKE CONCAT('%',#{shValue},'%')
		        </if>
		    </where>
			limit #{rowNumToShow} offset #{startRnumForMysql}
		</select>

	
	<!-- select 공통 구문 SQL -->
	<sql id ="selectCommon">
		FROM product a

				and a.delNY = 0
		where 1=1
		<!-- 추가, 사용여부 사용시 진행 필요 건 -->
		<!-- <if test="shUseNy != null and !shUseNy.equals('')">AND ifcgUseNy = #{shUseNy}</if> -->
		<if test="shDelNy != null and !shDelNy.equals('')">AND a.delNY = #{shDelNy}</if>
			  
		<choose>
			<when test="shOptionDate == 1">AND a.regDateTime BETWEEN #{shDateStart} AND #{shDateEnd}</when>
			<when test="shOptionDate == 2">AND a.modDateTime BETWEEN #{shDateStart} AND #{shDateEnd}</when>
		</choose>
		
		limit 99999999999
		) aa
		limit 5 offset 0
			
		<choose> 
            <when test="shOption == 3">AND a.productSeq = #{shValue}</when>
            <when test="shOption == 4">AND a.ProductName LIKE CONCAT('%',#{shValue},'%')</when>
   		</choose>
	
	</sql>

<select id="prodList" resultMap="resultMapObj">
    SELECT
        a.productSeq,
        a.ProductName,
        a.OrgPrice,
        a.DiscountedPrice,
        a.categoryCD,
        a.prodStockCD,
        (select round(avg(reviewRate)) from review where Product_seq = a.productSeq) as reviewRateAvg,
        (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount
    FROM 
        product a
    WHERE 1=1
    
    <!-- 검색에서 쓰일 쿼리 -->
    <if test="shValue != null and !shValue.equals('')">AND a.ProductName LIKE CONCAT('%',#{shValue},'%')</if>
    <if test="prodStockCD != null">AND a.prodStockCD = #{prodStockCD}</if>
    <if test="category != null and !category.isEmpty()">
        <choose>
            <when test="category.equals('Clothes')">AND a.categoryCD = #{category}</when>
        </choose>
    </if>
    AND a.productSeq IS NOT NULL 
</select>


<!-- 제품 상세 관련 매퍼 -->
<select id="prodDetailList" resultMap="resultMapObj">
    select
        a.productSeq
        , a.delNY
        , a.ProductName
        , a.OrgPrice
        , a.DiscountedPrice
        , a.prodStockCD
        , a.categoryCD
        , a.regDateTime
        , a.modDateTime
        , b.color
        , c.size
    from 
        product a
    inner join 
        color b
    on
        a.productSeq=b.Product_productSeq
    inner join 
        size c
    on 
        b.Product_productSeq=c.Product_productSeq
    where 1=1
     <if test="shDelNy != null and shDelNy.equals('')">AND a.delNY = #{shDelNy}</if>
     <choose>
        <when test="shOptionDate == 1">AND a.regDateTime BETWEEN #{shDateStart} AND #{shDateEnd}</when>
        <when test="shOptionDate == 2">AND a.modDatetime IS NOT NULL AND a.modDatetime BETWEEN #{shDateStart} AND #{shDateEnd}</when>
    </choose> 
     <choose>
        <when test="shOption == 1">AND a.productSeq = #{shValue}</when>
        <when test="shOption==2">AND a.ProductName LIKE CONCAT('%',#{shValue},'%')</when>
    </choose>
    and a.productSeq is not null 
</select>

<select id="wishlist" resultMap="resultMapObj">
select
    a.wishlistSeq,
    a.Member_memberSeq,
    a.Product_productSeq,
    a.size as wishlistSize,
    a.color as wishlistColor,
    a.delNY,
    a.ea,
    a.color,
    a.size,
    b.memberSeq,
    c.productSeq,
    c.ProductName,
    c.OrgPrice,
    c.DiscountedPrice
from wishlist a
inner join member b on a.Member_memberSeq=b.memberSeq
inner join product c on a.Product_productSeq=c.productSeq
where 1=1

</select>

<!-- 위시리스트 페이지에서 호출할 색상 테이블 -->
    <select id="colorOption" resultMap="resultMapObj">
    SELECT 
        a.Product_productSeq,
        b.colorSeq,
        b.color,
        b.memo,
        b.productSeq
        
    FROM 
       wishlist a
    INNER JOIN
        color b ON a.product_productSeq = b.productSeq
    WHERE 1=1
     AND 
        a.Product_productSeq = #{Product_productSeq}

</select>

<!-- 위시리스트 페이지에서 호출할 사이즈 테이블 -->
<select id="sizeOption" resultMap="resultMapObj" >
    SELECT 
        a.Product_productSeq,
       	b.sizeSeq,
       	b.size,
       	b.productSeq
    FROM 
        wishlist a
   INNER JOIN
   		size b
   ON
   		a.Product_productSeq=b.productSeq
   
   where 1=1
   AND
    		a.Product_productSeq=#{Product_productSeq} 
</select>

<!-- 위시리스트 삭제 처리 -->
<update id="ueleteW">
	update wishlist
	set
	delNY=1
	where 1=1
	and wishlistSeq = #{wishlistSeq}
</update>

<!-- 위시리스트 전체 삭제 처리 -->
<update id="deleteAll">
	update wishlist
	set delNY = 1
	where Member_memberSeq = #{memberSeq}
</update>

<!-- ProductMapper.xml -->


<!-- 필터링 (prodStockCD) -->
<!-- new -->
<select id="filteringByNew">
	    SELECT 
        a.productSeq,
        a.delNY,
        a.ProductName,
        a.OrgPrice,
        a.DiscountedPrice,
        a.prodStockCD,
        a.categoryCD,
        a.regDateTime,
        a.modDateTime,
         (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount,
		 (SELECT ROUND(AVG(reviewRate) * 2) / 2 FROM review WHERE Product_seq = a.productSeq) AS reviewRateAvg
    FROM 
        product a
        
        where a.prodStockCD=7
</select>

<!-- besk -->
<select id="filteringByBest">
	    SELECT 
        a.productSeq,
        a.delNY,
        a.ProductName,
        a.OrgPrice,
        a.DiscountedPrice,
        a.prodStockCD,
        a.categoryCD,
        a.regDateTime,
        a.modDateTime,
         (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount,
		 (SELECT ROUND(AVG(reviewRate) * 2) / 2 FROM review WHERE Product_seq = a.productSeq) AS reviewRateAvg
    FROM 
        product a
        
        where a.prodStockCD=8
</select>

<!-- restock -->
<select id="filteringByRestock">
	    SELECT 
        a.productSeq,
        a.delNY,
        a.ProductName,
        a.OrgPrice,
        a.DiscountedPrice,
        a.prodStockCD,
        a.categoryCD,
        a.regDateTime,
        a.modDateTime,
         (select count(*) from review where Product_seq = a.productSeq) as totalReviewCount,
		 (SELECT ROUND(AVG(reviewRate) * 2) / 2 FROM review WHERE Product_seq = a.productSeq) AS reviewRateAvg
    FROM 
        product a
        
        where a.prodStockCD=9
</select>
</mapper>